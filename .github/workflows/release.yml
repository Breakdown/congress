name: Release NPM Package

on:
  push:
    branches:
      - main

jobs:
  release:
    if: ${{ !contains(github.event.head_commit.message, 'Chore:Release') }}
    name: Release Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"
          cache-dependency-path: package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Build Package
        run: npm run build

      - name: Configure Git
        uses: oleksiyrudenko/gha-git-credentials@v2.1.1
        with:
          global: true
          token: "${{ secrets.RELEASE_GITHUB_TOKEN }}"

        # Change git remote to be SSH so that release-it can get around PR requirement
      - name: Change git remote to use SSH
        run: |
          git remote set-url origin git@github.com:Breakdown/congress.git

        # Configure SSH with private SSH key
      - name: Attach SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add GitHub to known hosts
        run: |
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Test SSH connection
        run: |
          ssh -T git@github.com || true

      - name: Run Patch Release
        if: ${{ !contains(github.event.head_commit.message, '[Release:Minor]') }}
        run: npm run release-ci-patch
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}

      - name: Run Minor Release
        if: ${{ contains(github.event.head_commit.message, '[Release:Minor]') }}
        run: npm run release-ci-minor
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
